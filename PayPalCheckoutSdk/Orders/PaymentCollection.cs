// This class was generated on Fri, 15 Feb 2019 15:03:18 PST by version 0.1.0-dev+8fcb5f of Braintree SDK Generator
// PaymentCollection.cs
// @version 0.1.0-dev+8fcb5f
// @type object
// @data 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
// DO NOT EDIT
using System.Runtime.Serialization;
using System.Collections.Generic;


namespace PayPalCheckoutSdk.Orders
{
    /// <summary>
    /// The collection of payments, or transactions, for a purchase unit in an order. For example, authorized payments, captured payments, and refunds.
    /// </summary>
    [DataContract]
    public class PaymentCollection
    {
        /// <summary>
	    /// Required default constructor
		/// </summary>
        public PaymentCollection() {}

        /// <summary>
        /// An array of authorized payments for a purchase unit. A purchase unit can have zero or more authorized payments.
        /// </summary>
        [DataMember(Name="authorizations", EmitDefaultValue = false)]
        public List<Authorization> Authorizations;

        /// <summary>
        /// An array of captured payments for a purchase unit. A purchase unit can have zero or more captured payments.
        /// </summary>
        [DataMember(Name="captures", EmitDefaultValue = false)]
        public List<Capture> Captures;

        /// <summary>
        /// An array of refunds for a purchase unit. A purchase unit can have zero or more refunds.
        /// </summary>
        [DataMember(Name="refunds", EmitDefaultValue = false)]
        public List<Refund> Refunds;
    }
}

